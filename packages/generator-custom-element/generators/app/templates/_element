const template = document.createElement('template');

template.innerHTML = `
	<style>
		:host {

		}
	</style>
`

export class <%= className %> extends HTMLElement {

  constructor() {
    super()

    // Attach a shadow root to the element.
    this.attachShadow({mode: 'open'})
    this.shadowRoot.appendChild(template.content.cloneNode(true))
  }

  /**
   * `connectedCallback` is invoked each time the custom element
   * is appended into a document-connected element
   */
  connectedCallback() {
  }

  /**
   * Invoked each time the custom element is disconnected from the document's DOM.
   */
  disconnectedCallback() {

  }
}

customElements.define('<%= elementName %>', <%= className %>)
